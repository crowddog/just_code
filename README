This folder contains the scripts used in the following paper:
    "Inferring ground truth from multi-annotator ordinal data: a probabilistic approach"
    Balaji Lakshminarayanan and Yee Whye Teh
    http://arxiv.org/abs/1305.0015

Some of the scripts require the following toolboxes:
- fastfit 
  http://research.microsoft.com/en-us/um/people/minka/software/fastfit/
- lightspeed
  http://research.microsoft.com/en-us/um/people/minka/software/lightspeed/

Addtitional notes:
- glad.m uses Carl Rasmussen's minimize.m (original version downloaded from http://learning.eng.cam.ac.uk/carl/code/minimize/)
- checkgrad2.m is a modified version of checkgrad.m
- See Copyright_minimize.txt for copyright notice accompanying minimize.m and checkgrad.m

If you have any questions/comments/suggestions/bug reports, please contact me at 
balaji@gatsby.ucl.ac.uk.

Code released under MIT license. See COPYING for additional information.
----------------------------------------------------------------------------

List of scripts: (names should be pretty self-descriptive; see below for usage help)
- ordmultinomial_mixture.m
- glad.m
- dawid_skene.m
- ord_bin.m
- regression_ml.m

Demo scripts: (generate toy data from the model and apply the model)
- test_toy_data_dawid_skene.m
- test_toy_data_glad.m
- test_toy_data_ord_bin.m
- test_toy_data_ordmultinomial_mixture.m
- test_toy_data_regression_ml.m
- test_all.m: tests all of the test_toy_data*m scripts


NOTE: I haven't included the dataset. If you want to run experiments with your dataset,
you need to create the following 2 tab-separated files (where "expt" is the tag for your dataset):
- expt.noisyRatings
  Assumed to contain nLabels rows, where each row contains the following:
  (instanceId, labelerId, rating, categoryId)
  The last column is acccessed only by ordmultinomial_mixture when difficulty == 'query'.
  Rating always contains values in 1:K (and NOT v_1, v_2, ..., v_K).
  Set v to [v_1, v_2, ..., v_K] in load_data.m if you wish to use a different mapping.
- expt.gt.quId.queryId.tsv
  Each row is assumed to contain the following info:
  (instanceId, ground truth rating, categoryId).
  All instanceId's need not have ground truth rating.
  In my dataset, instanceId = query-URL id and categoryId = query id to compute query-level metrics.
  The test_toy_data* scripts don't require categoryId though.

USAGE of scripts: 
In general, the matlab structure "settings" needs to contain the folowing variables:
- settings.maxIter          : max number of iterations
- settings.thresh           : threshold for difference in log-likelihood
- settings.EPS              : numerical stuff 
- settings.numeric_error    : numerical stuff
- settings.write            : do you wish to write the results?
- settings.verbose          : verbosity (0, 1 or 2)
- settings.op_dir           : directory for writing results
- settings.ip_dir           : directory where input data are located (expt.noisyRatings and expt.gt.quId.queryId.tsv)
- settings.compute_metrics  : do you wish to compute performance metrics at every iteration
- settings.true_z           : ground truth values (required only if settings.compute_metrics == 1)


Additional scripts (used by the scripts above):
- accumarray_mat.m
- checkgrad.m
- checkgrad2.m
- compute_metrics_simple.m
- compute_prob_ord_bin.m
- compute_truncnormal_moments.m
- load_data.m
- minimize.m
- normalize_phi_mat.m
- print_q_ordmultinomial.m
- sigmoid.m
- startup.m
- test_compute_truncnormal_moments.m
- gamma_mle_newton.m
- test_gamma_mle_newton.m
